# NGINX reverse proxy configuration for playground.gogentic.ai
# Place this in /etc/nginx/sites-available/playground.gogentic.ai
# Then symlink: ln -s /etc/nginx/sites-available/playground.gogentic.ai /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name playground.gogentic.ai;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name playground.gogentic.ai;

    # SSL certificates (update paths as needed)
    ssl_certificate /etc/letsencrypt/live/playground.gogentic.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/playground.gogentic.ai/privkey.pem;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Proxy to Docker container
    location / {
        proxy_pass http://127.0.0.1:3080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket support for hot reload (if needed)
    location /ws {
        proxy_pass http://127.0.0.1:3080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Increase upload size if needed
    client_max_body_size 10M;

    # Access logs
    access_log /var/log/nginx/playground.gogentic.ai.access.log;
    error_log /var/log/nginx/playground.gogentic.ai.error.log;
}